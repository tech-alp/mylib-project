name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.20'

      - name: Setup C++ compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential g++

      - name: Configure CMake (Debug)
        run: |
          mkdir -p build
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug

      - name: Build project
        run: cmake --build build -j

      - name: Configure CMake (Release)  
        run: |
          rm -rf build
          mkdir -p build  
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build Release
        run: cmake --build build -j

      - name: Create build artifacts
        run: |
          cd build
          tar -czf ../mylib-${{ github.sha }}.tar.gz .
          cd ..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: "*.tar.gz"

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install semantic-release dependencies
        run: |
          npm install --save-dev --no-package-lock \
            semantic-release \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/github \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/

      - name: Create minimal package.json for semantic-release
        run: |
          echo '{
            "name": "mylib-project",
            "version": "0.0.0-development",
            "private": true,
            "description": "C++17 library project"
          }' > package.json

      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
